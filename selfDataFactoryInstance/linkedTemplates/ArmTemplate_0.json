{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "selfDataFactoryInstance"
		},
		"SnowflakeLinkedService_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SnowflakeLinkedService'"
		},
		"blobLinkedService_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'blobLinkedService'"
		},
		"SnowflakeLinkedService_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sales_mart"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/SnowflakeLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SnowflakeV2",
				"typeProperties": {
					"authenticationType": "Basic",
					"accountIdentifier": "shyhuro-cc28333",
					"user": "RohanZade",
					"database": "[parameters('SnowflakeLinkedService_properties_typeProperties_database')]",
					"warehouse": "COMPUTE_WH",
					"role": "ACCOUNTADMIN",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SnowflakeLinkedService_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/blobLinkedService')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('blobLinkedService_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SinkSnowflake')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SnowflakeLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SnowflakeV2Table",
				"schema": [
					{
						"name": "YEAR_ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "MONTH_ID",
						"type": "NUMBER",
						"precision": 38,
						"scale": 0
					},
					{
						"name": "TOTALSALES",
						"type": "NUMBER",
						"precision": 18,
						"scale": 2
					}
				],
				"typeProperties": {
					"schema": "PUBLIC",
					"table": "SALESAGGREGATE"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SnowflakeLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceCSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "blobLinkedService",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sales_data.csv",
						"folderPath": "ADF-class4/datasets/landingZone",
						"container": "self-adf-container"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "ORDERNUMBER",
						"type": "String"
					},
					{
						"name": "QUANTITYORDERED",
						"type": "String"
					},
					{
						"name": "PRICEEACH",
						"type": "String"
					},
					{
						"name": "ORDERLINENUMBER",
						"type": "String"
					},
					{
						"name": "SALES",
						"type": "String"
					},
					{
						"name": "ORDERDATE",
						"type": "String"
					},
					{
						"name": "STATUS",
						"type": "String"
					},
					{
						"name": "QTR_ID",
						"type": "String"
					},
					{
						"name": "MONTH_ID",
						"type": "String"
					},
					{
						"name": "YEAR_ID",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/blobLinkedService')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfDataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SourceCSV",
								"type": "DatasetReference"
							},
							"name": "Source"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "SinkSnowflake",
								"type": "DatasetReference"
							},
							"name": "Sink"
						}
					],
					"transformations": [
						{
							"name": "filterOnQuatity"
						},
						{
							"name": "groupByOnMonthYear"
						}
					],
					"scriptLines": [
						"source(output(",
						"          ORDERNUMBER as short,",
						"          QUANTITYORDERED as short,",
						"          PRICEEACH as double,",
						"          ORDERLINENUMBER as short,",
						"          SALES as double,",
						"          ORDERDATE as timestamp,",
						"          STATUS as string,",
						"          QTR_ID as short,",
						"          MONTH_ID as short,",
						"          YEAR_ID as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     ignoreNoFilesFound: false,",
						"     moveFiles: ['ADF-class4/datasets/landingZone/sales_data.csv','ADF-class4/datasets/proccessedFiles/']) ~> Source",
						"Source filter(QUANTITYORDERED>=30) ~> filterOnQuatity",
						"filterOnQuatity aggregate(groupBy(YEAR_ID,",
						"          MONTH_ID),",
						"     TOTALSALES = sum(SALES)) ~> groupByOnMonthYear",
						"groupByOnMonthYear sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          YEAR_ID as string,",
						"          MONTH_ID as string,",
						"          TOTALSALES as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     stageInsert: true) ~> Sink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceCSV')]",
				"[concat(variables('factoryId'), '/datasets/SinkSnowflake')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/selfPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "selfDataflow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "selfDataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"Source": {},
									"Sink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/selfDataflow')]"
			]
		}
	]
}